// ‚Å°‚Å£‚Å£‚Å¢‚Äã‚Äå‚Äå‚Äç–ú–æ–¥—É–ª—å 4. –ó–∞–Ω—è—Ç—Ç—è 7. –ö–æ–ª–ª–±–µ–∫–∏. –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó. forEach‚Äã‚Å°

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ ùü≠ - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äã‚Å°
// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

// createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id,
// –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É
// —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏
// –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.

// logProduct(product) - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å

// logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ
// –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

// // –†—ñ—à–µ–Ω–Ω—è

// const createProduct = (obj, callback) => {
// 	const newObj = { ...obj, id: Math.random().toString(16).slice(2) }
// 	callback(newObj)
// }

// const logProduct = (product) => {
// 	console.log('product :>> ', product)
// }

// const logTotalPrice = (product) => {
// 	const result = product.price * product.quantity
// 	console.log('result :>> ', result)
// }

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct)
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice)

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ ùüÆ - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äã‚Å°
// –î–æ–¥–∞–π—Ç–µ –≤ –æ–±'—î–∫—Ç account –º–µ—Ç–æ–¥–∏ withdraw(amount, onSuccess, onError)
// —Ç–∞ deposit(amount, onSuccess, onError), –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
// —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.

// –ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT
// –∞–±–æ this.balance, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// –ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT
// –∞–±–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// –†—ñ—à–µ–Ω–Ω—è

// const TRANSACTION_LIMIT = 1000

// const account = {
// 	username: 'Jacob',
// 	balance: 1400,
// 	withdraw(amount, onSuccess, onError) {
// 		let { balance } = this
// 		if (amount > balance) {
// 			onError('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É')
// 		} else if (amount > TRANSACTION_LIMIT) {
// 			onError('–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó')
// 		} else {
// 			this.balance -= amount
// 			onSuccess(`–£—Å–ø—ñ—à–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è, –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É ${this.balance} –≥—Ä–Ω`)
// 		}
// 	},
// 	deposit(amount, onSuccess, onError) {
// 		if (amount > TRANSACTION_LIMIT) onError('–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó')
// 		else if (amount <= 0)
// 			onError(
// 				'–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é –∑ –Ω—É–ª—å–æ–≤–æ—é –∞–±–æ –≤—ñ–¥ º—î–º–Ω–æ—é —Å—É–º–æ—é'
// 			)
// 		else {
// 			this.balance += amount
// 			onSuccess(`–£—Å–ø—ñ—à–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è, –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É ${this.balance} –≥—Ä–Ω`)
// 		}
// 	},
// }

// function handleSuccess(message) {
// 	console.log(`‚úÖ Success! ${message}`)
// }

// function handleError(message) {
// 	console.log(`‚ùå Error! ${message}`)
// }

// // account.withdraw(2000, handleSuccess, handleError)
// // account.withdraw(1100, handleSuccess, handleError)
// // account.withdraw(300, handleSuccess, handleError)

// account.deposit(1700, handleSuccess, handleError)
// account.deposit(0, handleSuccess, handleError)
// account.deposit(-600, handleSuccess, handleError)
// account.deposit(600, handleSuccess, handleError)

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ 3 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äã‚Å°
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤,
// –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.
// –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
// –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞.

// // –†—ñ—à–µ–Ω–Ω—è

// // ...
// console.log(
// 	each([64, 49, 36, 25, 16], function (value) {
// 		return value * 2
// 	})
// )
// console.log(
// 	each([64, 49, 36, 25, 16], function (value) {
// 		return value - 10
// 	})
// )
// console.log(
// 	each([64, 49, 36, 25, 16], function (value) {
// 		return Math.sqrt(value)
// 	})
// )
// console.log(
// 	each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
// 		return Math.ceil(value)
// 	})
// )
// console.log(
// 	each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
// 		return Math.floor(value)
// 	})
// )
// console.log(
// 	each(['Maxim', 'Alex', 'Anet'], function (value) {
// 		return value.toLowerCase()
// 	})
// )
// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ ùü∞ - –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äã‚Å°
// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.

// function createProduct(partialProduct, callback) {
//   const product = { id: Date.now(), ...partialProduct };
//   callback(product);
// }

// function logProduct(product) {
// 	console.log(product)
// }

// function logTotalPrice(product) {
// 	console.log(product.price * product.quantity)
// }

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct)
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice)

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ 5 - –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äã‚Å°
// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.

// const TRANSACTION_LIMIT = 1000

// const account = {
// 	username: 'Jacob',
// 	balance: 400,

// 	withdraw: (amount, onSuccess, onError)  {
// 		if (amount > TRANSACTION_LIMIT) {
// 			onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`)
// 		} else if (amount > this.balance) {
// 			onError(`Amount can't exceed account balance of ${this.balance} credits`)
// 		} else {
// 			console.log('this>>', this)
// 			this.balance -= amount
// 			onSuccess(`Account balance: ${this.balance}`)
// 		}
// 	},
// 	deposit(amount, onSuccess, onError) {
// 		if (amount > TRANSACTION_LIMIT) {
// 			onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`)
// 		} else if (amount <= 0) {
// 			onError(`Amount must be more than 0 credits`)
// 		} else {
// 			console.log('this>>', this)
// 			this.balance += amount
// 			onSuccess(`Account balance: ${this.balance}`)
// 		}
// 	},
// }

// function handleSuccess  (message) { console.log(`‚úÖ Success! ${message}`)}

// function handleError (message)  {console.log(`‚ùå Error! ${message}`)}

// account.withdraw(2000, handleSuccess, handleError)
// account.withdraw(600, handleSuccess, handleError)
// account.withdraw(300, handleSuccess, handleError)
// // account.deposit(1700, handleSuccess, handleError)
// // account.deposit(0, handleSuccess, handleError)
// // account.deposit(-600, handleSuccess, handleError)
// // account.deposit(600, handleSuccess, handleError)

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ 6 - –Ü–Ω–ª–∞–π–Ω —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äã‚Å°
// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.

// function each  (array, callback)  {
// 	const newArr = []
// 	for (const el of array) {
// 		newArr.push(callback(el))
// 	}
// 	return newArr
// }

// console.log(each([64, 49, 36, 25, 16],function (value) {return value * 2}))
// console.log(each([64, 49, 36, 25, 16],function (value) {return  value - 10}))
// console.log(each([64, 49, 36, 25, 16], function (value) {return  Math.sqrt(value)}))
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {return  Math.ceil(value)}))
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {return Math.floor(value)}))

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ 7 - –ú–µ—Ç–æ–¥ forEach‚Äã‚Å°
// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

// const logItems = (items) => {
// 	for (let i = 0; i < items.length; i += 1) {
// 		console.log(`${i + 1} - ${items[i]}`)
// 	}
// }

// // function logItems(items) {}

// const logItems = (items) => {
// 	items.forEach((element, index) => {
// 		console.log(`${index + 1} - ${element}`)
// 	})
// }

// logItems(['Mango', 'Poly', 'Ajax'])
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã'])

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ 8 - –ú–µ—Ç–æ–¥ forEach‚Äã‚Å°
// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

// const printContactsInfo = ({ names, phones }) => {
// 	const nameList = names.split(',')
// 	const phoneList = phones.split(',')

// 	for (let i = 0; i < nameList.length; i += 1) {
// console.log(`${nameList[i]}: ${phoneList[i]}`)
// 	}
// }

// const printContactsInfo = ({ names, phones }) => {
// 	const nameList = names.split(',')
// 	const phoneList = phones.split(',')

// 	nameList.forEach((names, index) => {
// 		console.log(`${names}:${phoneList[index]}`)
// 	})
// }

// printContactsInfo({
// 	names: 'Jacob,William,Solomon,Artemis',
// 	phones: '89001234567,89001112233,890055566377,890055566300',
// })

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// ‚Å°‚Å¢‚Å£‚Å£‚Äã‚Äå‚Äç‚ÄåùóòùòÖùóÆùó∫ùóΩùóπùó≤ 9 - –ú–µ—Ç–æ–¥ forEach‚Äã‚Å°
// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

// function calculateAverage(...args) {
// 	let total = 0
// 	for (let i = 0; i < args.length; i++) {
// 		total += args[i]
// 	}
// 	return total / args.length
// }

// console.log(calculateAverage(1, 2, 3, 4)) // 2.5
// console.log(calculateAverage(14, 8, 2)) // 8
// console.log(calculateAverage(27, 43, 2, 8, 36)) // 23.2

// ‚Å°‚Å¢‚Å¢‚Å¢_______________________________________________________________________________________________________________________________________‚Å°

// #callback
// #inline callback
// #forEach
// #arrow function
// #implicit return
// #arguments
// #arrow callback function

// function fn1(number, clb) {
// 	number += 100
// 	clb(number)
// }

// // function fn2(number) {
// // 	console.log('number :>> ', number + 10)
// // }

// // function fn3(number) {
// // 	console.log('number :>> ', number + 100)
// // }
// // function fn4(number) {
// // 	console.log('number :>> ', number / 2)
// // }

// // fn1(10, fn2)
// fn1(10, function (number) {
// 	console.log('number :>> ', number + 10)
// })

// // fn1(10, fn3)
// fn1(10, function (number) {
// 	console.log('number :>> ', number + 100)
// })

// // fn1(10, fn4)
// fn1(10, function (number) {
// 	console.log('number :>> ', number / 2)
// })

// const arr = ['Alex', 'Bob', 'Jon', 'User']

// function fnClb(element, index, array) {
// 	console.log('element :>> ', element)
// 	console.log('index :>> ', index)
// 	console.log('array :>> ', array)
// }

// function fnClb2(_, index) {
// 	console.log('index :>> ', index)
// }

// arr.forEach(fnClb)
// arr.forEach(fnClb2)

// arr.forEach(function (element, index, array) {
// 	console.log('element :>> ', element)
// 	console.log('index :>> ', index)
// 	console.log('array :>> ', array)
// })

// arr.forEach(function (_, index) {
// 	console.log('index :>> ', index)
// })
// const result = []
// arr.forEach(function (el) {
// 	const newEl = (el + '!').toUpperCase()
// 	result.push(newEl)
// })
// console.log('result :>> ', result)

// function fn(number) {
// 	console.log('number :>> ', number)
// }

// const fn2 = function (number) {
// 	console.log('number :>> ', number)
// }

// const fn3 = (number) => {
// 	const a = number + 100
// 	return a + 10
// }

// const result = fn3(10)

// console.log('result :>> ', result)

// function fn1(number, clb) {
// 	number += 100
// 	clb(number)
// }
// // fn1(10, fn2)
// fn1(10, (number) => {
// 	console.log('number :>> ', number + 10)
// })

// // fn1(10, fn3)
// fn1(10, (number) => {
// 	console.log('number :>> ', number + 100)
// })

// // fn1(10, fn4)
// fn1(10, (number) => {
// 	console.log('number :>> ', number / 2)
// })

// fn1(10,()=>{})

// const arr = ['Alex', 'Bob', 'Jon', 'User']
// arr.forEach((el, i, arr) => {
// 	console.log('el :>> ', el + '!')
// })
